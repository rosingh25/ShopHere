
            //First
            CreateTable(
                "dbo.AspNetRoles",
                c => new
                {
                    Id = c.String(nullable: false, maxLength: 128),
                    Name = c.String(nullable: false, maxLength: 256),
                })
                .PrimaryKey(t => t.Id)
                .Index(t => t.Name, unique: true, name: "RoleNameIndex");

            CreateTable(
                "dbo.AspNetUserRoles",
                c => new
                {
                    UserId = c.String(nullable: false, maxLength: 128),
                    RoleId = c.String(nullable: false, maxLength: 128),
                })
                .PrimaryKey(t => new { t.UserId, t.RoleId })
                .ForeignKey("dbo.AspNetRoles", t => t.RoleId, cascadeDelete: true)
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId)
                .Index(t => t.RoleId);

            CreateTable(
                "dbo.AspNetUsers",
                c => new
                {
                    Id = c.String(nullable: false, maxLength: 128),
                    Email = c.String(maxLength: 256),
                    EmailConfirmed = c.Boolean(nullable: false),
                    PasswordHash = c.String(),
                    SecurityStamp = c.String(),
                    PhoneNumber = c.String(),
                    PhoneNumberConfirmed = c.Boolean(nullable: false),
                    TwoFactorEnabled = c.Boolean(nullable: false),
                    LockoutEndDateUtc = c.DateTime(),
                    LockoutEnabled = c.Boolean(nullable: false),
                    AccessFailedCount = c.Int(nullable: false),
                    UserName = c.String(nullable: false, maxLength: 256),
                })
                .PrimaryKey(t => t.Id)
                .Index(t => t.UserName, unique: true, name: "UserNameIndex");

            CreateTable(
                "dbo.AspNetUserClaims",
                c => new
                {
                    Id = c.Int(nullable: false, identity: true),
                    UserId = c.String(nullable: false, maxLength: 128),
                    ClaimType = c.String(),
                    ClaimValue = c.String(),
                })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId);

            CreateTable(
                "dbo.AspNetUserLogins",
                c => new
                {
                    LoginProvider = c.String(nullable: false, maxLength: 128),
                    ProviderKey = c.String(nullable: false, maxLength: 128),
                    UserId = c.String(nullable: false, maxLength: 128),
                })
                .PrimaryKey(t => new { t.LoginProvider, t.ProviderKey, t.UserId })
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId);
            
            //2    
            CreateTable(
                "dbo.Items",
                c => new
                {
                    Id = c.Int(nullable: false, identity: true),
                    ItemName = c.String(),
                    Price = c.Int(nullable: false),
                    Quantity = c.Int(nullable: false),
                })
                .PrimaryKey(t => t.Id);
            
            //3
            AddColumn("dbo.Items", "ItemDescription", c => c.String());
            
            //4
            AlterColumn("dbo.Items", "ItemName", c => c.String(nullable: false));
            AlterColumn("dbo.Items", "ItemDescription", c => c.String(nullable: false, maxLength: 30));
            
            //5 
            CreateTable(
               "dbo.Categories",
               c => new
               {
                   Id = c.Int(nullable: false, identity: true),
                   CategoryName = c.String(),
               })
               .PrimaryKey(t => t.Id);
            
            //6
            AddColumn("dbo.Items", "CategoryId", c => c.Int(nullable: true));
            CreateIndex("dbo.Items", "CategoryId");
            AddForeignKey("dbo.Items", "CategoryId", "dbo.Categories", "Id", cascadeDelete: true);
            
            //7
            Sql("SET IDENTITY_INSERT[dbo].[Categories] ON");
            Sql("INSERT INTO[dbo].[Categories]([Id], [CategoryName]) VALUES(1, N'Electronics')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(2, N'Clothes')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(3, N'Kids')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(4, N'HomeAndFurniture')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(5, N'Sports')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(6, N'Books')");
            Sql("INSERT INTO[dbo].[Categories] ([Id], [CategoryName]) VALUES(7, N'Other')");
            Sql("SET IDENTITY_INSERT[dbo].[Categories] OFF");
            
            //8
            AlterColumn("dbo.Items", "ItemDescription", c => c.String(nullable: false, maxLength: 60));

            //9
            AlterColumn("dbo.Items", "ItemName", c => c.String(nullable: false, maxLength: 60));


            //10 
            AlterColumn("dbo.Items", "Price", c => c.Single(nullable: false));

            //11
            CreateTable(
                "dbo.Orders",
                c => new
                {
                    OrderId = c.Int(nullable: false, identity: true),
                    CustomerName = c.String(),
                    Address = c.String(),
                    OrderPlacedTime = c.DateTime(nullable: false),
                    ItemId = c.Int(nullable: false),
                })
                .PrimaryKey(t => t.OrderId)
                .ForeignKey("dbo.Items", t => t.ItemId, cascadeDelete: true)
                .Index(t => t.ItemId);

            //12
            AddColumn("dbo.Orders", "IsDelivered", c => c.Boolean(nullable: false));


            //13
            AddColumn("dbo.AspNetUsers", "Address", c => c.String(nullable: false));


            //14
            AddColumn("dbo.Items", "AdminName", c => c.String());

